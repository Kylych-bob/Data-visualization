В даном проекте были использованы такие инструменты как: 
'matplotlib' для визуализации данных
'plotly' пакет для создания визуализации

Настройка типа надписей

Корректировка графика

Встроенные стили
    >>> imoprt matplotlib.pyplot as plt
    >>> plt.style.available
    dark_background
    seaborn
    bmh

Нанесение и оформление отдельных точек функцией scatter()

Вывод серии точек функций scatter()

Автоматическое вычисление данных с помощью цикла

Определение пользовательских цветов

Цветовые карты (colormap)
цветовые карты на сайте http://matplotlib.org/
в разделе Example, пункт color, ссылка colormaps_reference

Автоматическое сохранение диаграмм
для сохранения диаграмм в файле заменить
plt.show() на plt.savefig(),
plt.savefig('squares_plot.png', bbox_inches='tight')
первый аргумент-файл в котором будет сохранена диаграмма
второй-отсекает лишнее пространство

------------------------------------------------------------
Случайное блуждание (random walk)

Вывод случайного блуждания

Оформление случайного блуждания
    1) подчеркнуть откуда началось блуждание,
        где оно закончилось и по какому пути следовало
    2) определить характеристики, которые нужно ослабить
        несуществующие элементы, деления, шкалы и метки
    3) результат простое визуальное представление
        четко описывающий путь исипользованный в
        каждом случайном блуждении

Назначение цветов
    1) используем цветовую карту для отображения точек блуждания
    2) удаление черных контуров для лучшей видимости
    3) цвет в соответствии с их позицией в блуждании
    4) начало и конец блуждания

Удаление осей

Добавление точек

------------------------------------------------------------
Моделирование бросков кубиков в Plotly

1) Генерация набора данных, представляющих брошенные кубики
2) На базе данных бросков будет построена диаграмма,
    по которой можно определить, какие результаты более вероятны

